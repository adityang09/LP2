class Job:
    def __init__(self, id, profit, deadline):
        self.id = id
        self.deadline = deadline
        self.profit = profit

    def __str__(self):
        return f"Job: id={self.id}, deadline={self.deadline}, profit={self.profit}"

def greedy_scheduling(jobs):
    jobs.sort(key=lambda x: x.profit, reverse=True)
    max_deadline = max(job.deadline for job in jobs)
    slot_status = [True] * max_deadline
    max_profit_seq = []
    for job in jobs:
        for i in range(job.deadline - 1, -1, -1):
            if slot_status[i]:
                max_profit_seq.append(job)
                slot_status[i] = False
                break
    for job in max_profit_seq:
        print(job)
    return sum(job.profit for job in max_profit_seq)

jobs = [Job(1, 20, 2), Job(2, 15, 2), Job(3, 10, 1), Job(4, 5, 3), Job(5, 1, 3)]
max_profit = greedy_scheduling(jobs)
print(f"Max profit is {max_profit}")
